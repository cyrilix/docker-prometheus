env:
  - IMAGE_NAME=prometheus
  - VERSION=2.6.0
  - DOCKER_CLI_EXPERIMENTAL := enabled

sudo: required
services:
  - docker
language: golang
script:
  # prepare qemu
  - docker run --rm --privileged multiarch/qemu-user-static:register --reset
  - for target_arch in aarch64 arm x86_64; do wget -N https://github.com/multiarch/qemu-user-static/releases/download/v2.9.1-1/x86_64_qemu-${target_arch}-static.tar.gz; tar -xvf x86_64_qemu-${target_arch}-static.tar.gz; done

  - git clone git clone https://github.com/prometheus/prometheus.git
  - cd prometheus
  - git checkout v${VERSION}
  
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

  - env GOOS=linux GOARCH=amd64 make build
  - docker build --file ./Dockerfile --tag ${IMG_NAME}:amd64-latest .
  - docker tag ${IMG_NAME}:amd64-latest ${IMG_NAME}:amd64-${VERSION}
  - docker push ${IMG_NAME}:amd64-latest
  - docker push ${IMG_NAME}:amd64-${VERSION}

  - sed "s#FROM \+\(.*\)#FROM arm32v6/busybox#" Dockerfile > Dockerfile.arm
  - env GOOS=linux GOARCH=arm GOARM=6 make build
  - docker build --file ./Dockerfile --tag ${IMG_NAME}:arm-latest .
  - docker tag ${IMG_NAME}:arm-latest ${IMG_NAME}:amd64-${VERSION}
  - docker push ${IMG_NAME}:arm-latest
  - docker push ${IMG_NAME}:arm-${VERSION}

  - docker -D manifest create "${IMG_NAME}:${VERSION}" "${IMG_NAME}:amd64-${VERSION}" "${IMG_NAME}:arm-${VERSION}"
  # Set the architecture to ARM for the ARM image
  - docker -D manifest annotate "${IMG_NAME}:${VERSION}" "${IMG_NAME}:arm-${VERSION}" --os=linux --arch=arm --variant=v6
  # Push the manifest
  - docker -D manifest push "${IMG_NAME}:${VERSION}"

  # Repeat for the latest tag
  - docker -D manifest create "${IMG_NAME}:latest" "${IMG_NAME}:amd64-latest" "${IMG_NAME}:arm-latest"
  - docker -D manifest annotate "${IMG_NAME}:latest" "${IMG_NAME}:arm-latest" --os=linux --arch=arm --variant=v6
  - docker -D manifest push "${IMG_NAME}:latest"




